#!/bin/bash

# @describe Utility to work with Cloudflare services.

# Validate environment variables
if [ -z "$CF_ARCHIVER_PUBLIC_URI" ]; then "Missing env variable CF_ARCHIVER_PUBLIC_URI"; fi
if [ -z "$CF_ARCHIVER_PRIVATE_URI" ]; then "Missing env variable CF_ARCHIVER_PRIVATE_URI"; fi
if [ -z "$CF_SHORTENER_URI" ]; then "Missing env variable CF_SHORTENER_URI"; fi
if [ -z "$CF_LINKS_KV_NAMESPACE_ID" ]; then "Missing env variable CF_LINKS_KV_NAMESPACE_ID"; fi
if [ -z "$CF_SECRETS_KV_NAMESPACE_ID" ]; then "Missing env variable CF_SECRETS_KV_NAMESPACE_ID"; fi

# Verify that argc is installed
if ! command -v argc &>/dev/null; then
    echo "argc is not installed - see https://github.com/sigoden/argc"
    exit 1
fi

# Verify that wranger is installed
if ! command -v wrangler &>/dev/null; then
    echo "wrangler is not installed - see https://developers.cloudflare.com/workers/wrangler/install-and-update/"
    exit 1
fi

# @cmd Upload a file to R2
# @arg file!                         File to upload
# @option --expiry=7                 Expiry date in days for private files (Default = 1 week)
# @option --password                 Password to use for access (Default = automatically generated)
# @option --name                     The blob name (Defaults to random name)
# @flag --keep-name                  Set blob name same as file name (Default = false)
# @flag --private                    Indicates wether to make the file public or private (Default = false)
upload() {
    if ! test -f "$argc_file"; then
        echo "Invalid file path: '$argc_file'"
        exit 1
    fi

    public_bucket="public"
    private_bucket="private"

    key=$(openssl rand -hex 4)
    if [[ $argc_keep_name == 1 ]]; then
        key=$(basename $argc_file)
    elif [[ $argc_name == 1 ]]; then
        key="$argc_name"
    fi

    path="$public_bucket/$key"

    if [[ $argc_private == 1 ]]; then
        path="$private_bucket/$key"
        expiry=(date -d "+$expiry days" '+%s')
        pw=$argc_password
        if [ -z "$pw" ]; then
            pw=$(openssl rand -hex 6)
        fi

        wrangler kv:key put "$path" "$pw" --namespace-id $CF_SECRETS_KV_NAMESPACE_ID --expiration $expiry 1>/dev/null
    fi

    wrangler r2 object put "$path" --file="$argc_file" 1>/dev/null

    output="$CF_ARCHIVER_PUBLIC_URI/$key"
    if [[ $argc_private == 1 ]]; then
        output="$CF_ARCHIVER_PRIVATE_URI/$key?pw=$pw"
    fi

    # echo "$output" | pbcopy
    echo "$output"
}

# @cmd Create short url
# @arg target!                      Target url to create short url for
# @option --key                     Key to use for short url (leave empty to generate one)
link() {
    key=$argc_key
    if [ -z "$key" ]; then
        key=$(openssl rand -hex 4)
    fi

    wrangler kv:key put "$key" "$argc_target" --namespace-id $CF_LINKS_KV_NAMESPACE_ID 1>/dev/null

    output="$CF_SHORTENER_URI/$key â†’ $argc_target"

    echo "$output" | pbcopy
    echo "$output"
}

eval "$(argc "$0" "$@")"
