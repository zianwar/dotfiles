#!/usr/bin/env sh

# Automatically remove duplicates from these arrays
typeset -U path PATH cdpath CDPATH fpath FPATH manpath MANPATH

# support colors in less
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;44;33m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'

# fzf
source <(fzf --zsh)

if [ -x "$(command -v brew)" ]; then
    # GNU coretutils (those that come with macOS are outdated).
    add_to_path "$(brew --prefix coreutils)/libexec/gnubin:$PATH"
    # GNU "sed"
    add_to_path "$(brew --prefix gnu-sed)/libexec/gnubin:$PATH"
    # GNU findutils
    add_to_path "$(brew --prefix findutils)/libexec/gnubin:$PATH"

    # Go
    export GOROOT=$(brew --prefix go)/libexec
    export GOPATH=$HOME/.go
    add_to_path "$GOPATH/bin" "$GOROOT/bin"
fi

# Rust
if [ -f "$HOME/.cargo/env" ]; then
    source "$HOME/.cargo/env"
fi

# pnpm
if [ -d "$HOME/Library/pnpm" ]; then
    export PNPM_HOME="$HOME/Library/pnpm"
    add_to_path "$PNPM_HOME"
fi

# nvm: Node package manager
export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

# Enable persistent REPL history for `node`.
export NODE_REPL_HISTORY_FILE=~/.node_history
# Allow 32Â³ entries; the default is 1000.
export NODE_REPL_HISTORY_SIZE='32768'

# bun
if [ -f "$HOME/.bun" ]; then
    export BUN_INSTALL="$HOME/.bun"
    add_to_path "$BUN_INSTALL/bin"
    # bun completions
    [ -s "$HOME/.bun/_bun" ] && source "$HOME/.bun/_bun"
fi

# UV python toolkit
if [ -x "$(command -v uv)" ]; then
    eval "$(uv generate-shell-completion zsh)"
    # UV tools
    add_to_path "$HOME/.local/share/uv/tools"
fi

# Include custom binaries and scripts
add_to_path "$HOME/.local/bin" "$DOTFILES/scripts"
